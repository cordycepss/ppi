const express = require('express');
const mongoose = require('mongoose');
const users=require('./schema/UserSchema')
const jwt = require('jsonwebtoken');
const express_handlebars=require('express-handlebars')
const userRouter=require('./routes/userRouter');
const password=require('./routes/password')
const cookieParser = require('cookie-parser');
const app = express();
const morgan=require('morgan')
const passport = require('./config/passport-setup')
const session=require('express-session')
const googleRouter=require('./routes/googleauth')
const commentRouter=require('./routes/commentRouter')
const cors = require('cors');
const postRouter=require('./routes/postRouter')
const announcementRouter=require('./routes/announcementRouter')

app.disable('etag');

app.use(cors()); 


app.use(cors({
  origin: ['http://127.0.0.1:5500', 'http://localhost:5501'],
  methods: ['GET', 'POST', 'PUT', 'DELETE'],
  credentials: true 
}));


app.use(session({
  secret: 'keyboard cat',
  resave: false,
  saveUninitialized: false,
}))

//passport config
app.use(passport.initialize())
app.use(passport.session())



app.listen(3000,()=>{
  console.log('app running on port 3000')
})




// middleware
app.use(express.static('public'));

app.use('/uploads', express.static('uploads'));
app.use(express.json())
app.use(cookieParser())
app.use('/announce',announcementRouter)
app.use('/Users',userRouter)
app.use(commentRouter)
app.use(password)

app.use((req, res, next) => {
  console.log("Middleware Debug: Cookies ->", req.cookies);
  next();
});
app.use(morgan("dev"));

app.use(googleRouter)
app.use(postRouter)



// view engine
app.set('view engine', 'ejs');

// database connection
const dbURI = 'mongodb://localhost:27017/';

mongoose.connect(dbURI)
  .then((result) => {
console.log("connected successfully")
})
  .catch((err) => {console.log(err)
   process.exit(1)
  });
  

app.get('/', (req, res) =>{
  const userCookie = req.cookies.newuser;

  if (userCookie) {
      window.location.href='/Users/profile'
  } else {
      res.render('home'); 
  }
  
  });
 app.get ('/google')

  app.get("/reviews", (req, res) => {
    const userId = req.query.userId;
    res.render("reviewsPage", { userId });
});
app.get("/comments", (req, res) => {
 
  res.render("comments");
});

app.get("/announcement", (req, res) => {
 
  res.render("announcement");
});



app.get("reviews", (req, res) => {

 res.send('hello')
});


app.get("/profile", (req, res) => {
  let user={
    Firstname:'',
    Familyname:'',
    wilaya:'',
    commune:"",
    category:'',
    pfp:'',
    creatdAt:'',
    cover:'',
    phone:'',
    email:''
  };
  res.render("profile",{user});
});

app.get("/post", (req, res) => {
  
  res.render("post");
});

app.get('/feed',(req,res)=>{
  res.render('feed')
})
